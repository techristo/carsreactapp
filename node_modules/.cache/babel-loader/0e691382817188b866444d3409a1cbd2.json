{"ast":null,"code":"var _jsxFileName = \"/home/user/cars/src/App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { updateConfig, requestConfig } from \"./data/redux\";\nimport carSettings from \"./data/mock-data\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport PreviewPanel from \"./components/PreviewPanel\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  var dispatch = useDispatch();\n  var config = useSelector(function (state) {\n    return state.config;\n  });\n  useEffect(function () {\n    dispatch(requestConfig());\n    setTimeout(function () {\n      var updateConfigAction = updateConfig(carSettings);\n      dispatch(updateConfigAction);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Spin, {\n    tip: \"Loading...\",\n    spinning: config.loading,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-config\",\n      children: [/*#__PURE__*/_jsxDEV(ControlPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(PreviewPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"9ow7v0iFC8CQVoPXcxqS3jmX9LI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/cars/src/App.js"],"names":["useDispatch","useSelector","useEffect","Spin","updateConfig","requestConfig","carSettings","ControlPanel","PreviewPanel","App","dispatch","config","state","setTimeout","updateConfigAction","loading"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,cAA5C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAO,oBAAP;AACA,OAAO,cAAP;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAChB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,MAAM,GAAGV,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACD,MAAjB;AAAA,GAAD,CAA1B;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AAEAQ,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMC,kBAAkB,GAAGV,YAAY,CAACE,WAAD,CAAvC;AACAI,MAAAA,QAAQ,CAACI,kBAAD,CAAR;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,IAAD;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,QAAQ,EAAEH,MAAM,CAACI,OAAxC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAtBD;;GAAMN,G;UACaT,W,EACFC,W;;;KAFXQ,G;AAwBN,eAAeA,GAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { updateConfig, requestConfig } from \"./data/redux\";\nimport carSettings from \"./data/mock-data\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport PreviewPanel from \"./components/PreviewPanel\";\n\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const config = useSelector((state) => state.config);\n\n  useEffect(() => {\n    dispatch(requestConfig());\n\n    setTimeout(() => {\n      const updateConfigAction = updateConfig(carSettings);\n      dispatch(updateConfigAction);\n    }, 1000);\n  }, []);\n\n  return (\n    <Spin tip=\"Loading...\" spinning={config.loading}>\n      <div className=\"car-config\">\n        <ControlPanel />\n\n        <PreviewPanel />\n      </div>\n    </Spin>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}